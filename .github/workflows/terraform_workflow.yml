name: Terraform Deployment

on:
  push:
    branches:
      - 'feature/**'

jobs:
  terraform_deployment:
      name: "Terraform Deployment"
      runs-on: macos-latest
      timeout-minutes: 20
      defaults:
        run:
          shell: bash

      steps: 
      - name: checkout codebase
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8

      - name: 'Set up Cloud SDK'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: 'devops-361723'

      - name: 'Setup Python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

    # - name: 'Setup Ansible'
    #   run: python3 -m pip install ansible==2.9; which ansible

      - name: Install Ansible SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ANSIBLE_PRIV }}
          name: ansible_ed25519 
          config: ${{ secrets.ANSIBLE_CONFIG }} 
          known_hosts: unnecessary  

      - name: Install id_rsa SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE }}
          name: id_rsa 
          known_hosts: unnecessary  

      - name: Terraform fmt code from base dir 
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform initialize from base dir 
        id: init
        run: terraform init

      - name: Terraform plan 
        id: plan
        run: terraform plan #-var-file=terraform.tfvars -out=tfplan

      - name: Terraform apply 
        id: apply
        run: terraform apply -auto-approve -input=false #tfplan

